using System;

class Item
{
    public string Name { get; set; }
    public int Weight { get; set; }
    public int Value { get; set; }
}

class KnapsackProblem
{
    static int GetMaxValue(Item[] items, int capacity, bool isUnlimited)
    {
        int n = items.Length;
        int[,] dp = new int[n + 1, capacity + 1];

        for (int i = 1; i <= n; i++)
        {
            for (int w = 1; w <= capacity; w++)
            {
                dp[i, w] = dp[i - 1, w];

                if (items[i - 1].Weight <= w)
                {
                    int value = items[i - 1].Value;
                    int remainingCapacity = w - items[i - 1].Weight;

                    if (isUnlimited)
                        value += dp[i, remainingCapacity];
                    else
                        value += dp[i - 1, remainingCapacity];

                    dp[i, w] = Math.Max(dp[i, w], value);
                }
            }
        }

        return dp[n, capacity];
    }

    static void Main()
    {
        Item[] items = {
            new Item { Name = "Item1", Weight = 6, Value = 6 },
            new Item { Name = "Item2", Weight = 2, Value = 4 },
            new Item { Name = "Item3", Weight = 3, Value = 5 },
            new Item { Name = "Item4", Weight = 2, Value = 7 },
            new Item { Name = "Item5", Weight = 3, Value = 10 },
            new Item { Name = "Item6", Weight = 1, Value = 2 },
        };

        int capacity = 23;

        Console.WriteLine("Do you want to allow unlimited items? (y/n)");
        bool isUnlimited = Console.ReadLine().ToLower() == "y";

        int maxValue = GetMaxValue(items, capacity, isUnlimited);
        Console.WriteLine("Maximum value: " + maxValue);
    }
}
